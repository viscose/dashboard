<%# d3 collapsible tree layout from http://bl.ocks.org/mbostock/4339083 %>
<% content_for :head do %>
<style>

.node circle {
  fill: #fff;
  stroke: steelblue;
  stroke-width: 1.5px;
}

.node {
/*  font: 10px sans-serif;*/
}

.node.attribute circle {
  fill: #7b3337;
  stroke: #2c0602;
}

.link {
  fill: none;
  stroke: #ccc;
  stroke-width: 1.5px;
}

</style>
<% end %>

<h1>Dashboard</h1>
  
<div class="row-fluid" id="tool-tabs">
  
  <a class="quick-button span3" data-toggle="provisioning">
    <i class="fa-icon-hdd"></i>
    <p>Device Provisioning</p>
  </a>
  <a class="quick-button span3" data-toggle="deployment">
    <i class="fa-icon-tasks"></i>
    <p>Application Management</p>
  </a>
  <a class="quick-button span3" data-toggle="runtime">
    <i class="fa-icon-cog"></i>
    <p>Application Runtime</p>
  </a>
  <a class="quick-button span3" data-toggle="status">
    <i class="fa-icon-dashboard"></i>
    <p>Status</p>
  </a>
  
<script type="text/javascript">
$(function() {
  $('#tool-tabs a').each(function() {
    var toggleElement = $(this).attr("data-toggle");
    $(this).click(function() {
      $('.tool-box .box').each(function() {
        $(this).hide();
      });
      $("#" + toggleElement).show();
    });
  });
});
</script>
</div>

<div class="row-fluid tool-box">
  <div class="box span12" id="provisioning" style="display:none;">
    <div class="box-header">
      <h2>
        <i class="fa-icon-hdd"></i>
        <span class="break"></span>
        Device Provisioning
      </h2>
    </div>
    <div class="box-content">
      <div class="row-fluid">
      <%= form_tag deploy_path do %>
        <div class="sliderOverlay span7">
          <div id="deployment_size" class="slider sliderMin sliderGreen"></div>
        </div>
        <div class="span2">
          <div class="input-group">  
            <%= text_field_tag 'num_devices', '', readonly: true, size: 3, class: 'form-control', style: 'width: 2em;' %>
            <span class="input-group-addon">devices</span>
          </div>
        </div>
        <%= button_tag 'Provision', class: 'btn btn-large btn-success span2' %>
      <% end %>
      <script type="text/javascript">
      $(function() {
        $("#deployment_size").slider({
          range: "min",
          value: <%= session[:deployment]['num_devices'].to_i rescue 0 %>,
          min: 0,
          max: 100,
          slide: function(event, ui) {
            $("#num_devices").val(ui.value);
          }
        });
        $("#num_devices").val(<%= session[:deployment]['num_devices'] rescue 0 %>);
      });
      </script>
      </div>
    </div>
  </div>
</div>
<div class="row-fluid tool-box">
  <div class="box span12" id="deployment" style="display:none;">
    <div class="box-header">
      <h2>
        <i class="fa-icon-tasks"></i>
        <span class="break"></span>
        Application Management
      </h2>
    </div>
    <div class="box-content">
      <div class="row-fluid">
        <ul class="dashboard-list span6">
          <li>
            <a href="#" data-app-name="bms_traditional">
              <i class="fa-icon-building"></i>
              Traditional BMS (Application Logic in the Cloud)
            </a>
            <div class="row-fluid" style="display:none;">
              <div class="span8">
                <%= image_tag 'bms_application_single.svg' %>
              </div>
            </div>
          </li>
          <li>
            <a href="#" data-app-name="bms_evolved">
              <i class="fa-icon-building"></i>
              Evolved BMS (Application Logic on Devices)
            </a>
            <div class="row-fluid" style="display:none;">
              <div class="span8">
                <%= image_tag 'bms_application_multi.svg' %>
              </div>
            </div>
          </li>
          <li>
            <a href="http://localhost:8080" data-app-name="bms_evolved">
              <i class="fa-icon-building"></i>
              URBEM Energy and Mobility Simulation (Application Logic in the Cloud)
            </a>
            <!-- <div class="row-fluid" style="display:none;">
              <div class="span8">
                <%= image_tag 'bms_application_multi.svg' %>
              </div>
            </div> -->
          </li>
        </ul>
        <script type="text/javascript">
          $(function() {
            $("#deployment li a").each(function() {
              $(this).click(function() {
                $("#deployment ul .row-fluid").each(function() {
                  $(this).hide();
                });
                $(this).next().show();
                $("#app_name").val($(this).attr("data-app-name"));
              });
            });
          });
        </script>
        <div class="span6">
          <div class="row-fluid">
          <%= form_tag deploy_app_path do %>
            <div class="sliderOverlay span7">
              <div id="app_deployment_size" class="slider sliderMin sliderGreen"></div>
            </div>
            <div class="span2">
              <div class="input-group">  
                <%= text_field_tag 'app_num_devices', '', readonly: true, size: 3, class: 'form-control', style: 'width: 2em;' %>
                <span class="input-group-addon">devices</span>
              </div>
            </div>
            <%= hidden_field_tag 'app_name' %>
            <%= button_tag 'Deploy Application', class: 'btn btn-large btn-success span6' %>
          <% end %>
          <script type="text/javascript">
          $(function() {
            $("#app_deployment_size").slider({
              range: "min",
              value: <%= session[:deployment]['app_num_devices'].to_i rescue 0 %>,
              min: 0,
              max: $("#num_devices").val(),
              slide: function(event, ui) {
                $("#app_num_devices").val(ui.value);
              }
            });
            $("#app_num_devices").val(<%= session[:deployment]['app_num_devices'] rescue 0 %>);
          });
          </script>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="row-fluid tool-box">
  <div class="box span12" id="runtime" style="display:none;">
    <div class="box-header">
      <h2>
        <i class="fa-icon-cog"></i>
        <span class="break"></span>
        Application Runtime
      </h2>
    </div>
    <div class="box-content">
      <div class="row-fluid">
        <% if session.fetch(:deployment, {}).fetch('apps', []).empty? then%>
          <p>Deploy an application to see runtime stats.</p>
        <% else %>
          <% session[:deployment]['apps'].each do |app_name| %>
            <p>Get runtime stats for <%= app_name %> at <%= link_to "#{app_name} stats" %>.</p>
          <% end %>
        <% end %>
      </div>
    </div>
  </div>
</div>
<div class="row-fluid tool-box">
  <div class="box span12" id="status" style="display:none;">
    <div class="box-header">
      <h2>
        <i class="fa-icon-dashboard"></i>
        <span class="break"></span>
        Status
      </h2>
    </div>
    <div class="box-content">
      <div class="row-fluid">
        <div class="circleStats">
          <div class="span2">
            <div class="circleStatsItemBox">
              <div class="header">CPU Load</div>
              <span class="percent">percent</span>
              <div class="circleStat">
                <input type="text" value="54" class="whiteCircle">
              </div>
              <div class="footer">
                
              </div>
            </div>
          </div>          
          <div class="span2">
            <div class="circleStatsItemBox">
              <div class="header">Network Load</div>
              <span class="percent">percent</span>
              <div class="circleStat">
                <input type="text" value="31" class="whiteCircle">
              </div>
              <div class="footer">
                
              </div>
            </div>
          </div>          
          <div class="span2">
            <div class="circleStatsItemBox">
              <div class="header">Memory Pressure</div>
              <span class="percent">percent</span>
              <div class="circleStat">
                <input type="text" value="79" class="whiteCircle">
              </div>
              <div class="footer">
                
              </div>
            </div>
          </div>          
          <div class="span2">
            <div class="circleStatsItemBox">
              <div class="header">Active Devices</div>
              <span class="percent">gateways</span>
              <div class="circleStat">
                <input type="text" value="53" class="whiteCircle">
              </div>
              <div class="footer">
                
              </div>
            </div>
          </div>          
        </div>
      </div>
      <p>Coming soon.</p>
    </div>
  </div>
</div>

<div class="row-fluid">
  <div class="box span12">
    <div class="box-header">
      <h2>
        <i class="fa-icon-home"></i>
        <span class="break"></span>
        System Overview
      </h2>
    </div>
    <div class="box-content">
      <div class="row-fluid">
      <div id='graph' class="span12"></div>
  
      <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <script>

    var margin = {top: 20, right: 120, bottom: 20, left: 120},
        width = $("#graph").width() - margin.right - margin.left,
        height = 800 - margin.top - margin.bottom;

    var i = 0,
        duration = 750,
        root;

    var tree = d3.layout.tree()
        .size([height, width]);

    var diagonal = d3.svg.diagonal()
        .projection(function(d) { return [d.y, d.x]; });

    var svg = d3.select("#graph").append("svg")
        .attr("width", width + margin.right + margin.left)
        .attr("height", height + margin.top + margin.bottom)
      .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    d3.json("/visitors/infrastructure.json", function(error, flare) {
      if (error) throw error;

      root = flare;
      root.x0 = height / 2;
      root.y0 = 0;

      function collapse(d) {
        if (d.children) {
          d._children = d.children;
          d._children.forEach(collapse);
          d.children = null;
        }
      }

      root.children.forEach(collapse);
      update(root);
    });

    d3.select(self.frameElement).style("height", "800px");

    function update(source) {

      // Compute the new tree layout.
      var nodes = tree.nodes(root).reverse(),
          links = tree.links(nodes);

      // Normalize for fixed-depth.
      nodes.forEach(function(d) { d.y = d.depth * 180; });

      // Update the nodes…
      var node = svg.selectAll("g.node")
          .data(nodes, function(d) { return d.id || (d.id = ++i); });

      // Enter any new nodes at the parent's previous position.
      var nodeEnter = node.enter().append("g")
          // .attr("class", "node")
          .attr("class", function(d) { console.log(d); return d.value ? "node attribute" : "node"; })
          .attr("transform", function(d) { return "translate(" + source.y0 + "," + source.x0 + ")"; })
          .on("click", click);  

      nodeEnter.append("circle")
          .attr("r", 1e-6)
          .style("fill", function(d) { return d._children ? "lightsteelblue" : "#fff"; });

      nodeEnter.append("text")
          .attr("x", function(d) { return d.children || d._children ? -10 : 10; })
          .attr("dy", ".35em")
          .attr("text-anchor", function(d) { return d.children || d._children ? "end" : "start"; })
          .text(function(d) { return d.value ? d.name + ": " + d.value : d.name; })
          .style("fill-opacity", 1e-6);

      // Transition nodes to their new position.
      var nodeUpdate = node.transition()
          .duration(duration)
          .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; });

      nodeUpdate.select("circle")
          .attr("r", 4.5)
          .style("fill", function(d) { return d._children ? "lightsteelblue" : (d.value ? "#7b3337" : "#fff"); });

      nodeUpdate.select("text")
          .style("fill-opacity", 1);

      // Transition exiting nodes to the parent's new position.
      var nodeExit = node.exit().transition()
          .duration(duration)
          .attr("transform", function(d) { return "translate(" + source.y + "," + source.x + ")"; })
          .remove();

      nodeExit.select("circle")
          .attr("r", 1e-6);

      nodeExit.select("text")
          .style("fill-opacity", 1e-6);

      // Update the links…
      var link = svg.selectAll("path.link")
          .data(links, function(d) { return d.target.id; });

      // Enter any new links at the parent's previous position.
      link.enter().insert("path", "g")
          .attr("class", "link")
          .attr("d", function(d) {
            var o = {x: source.x0, y: source.y0};
            return diagonal({source: o, target: o});
          });

      // Transition links to their new position.
      link.transition()
          .duration(duration)
          .attr("d", diagonal);

      // Transition exiting nodes to the parent's new position.
      link.exit().transition()
          .duration(duration)
          .attr("d", function(d) {
            var o = {x: source.x, y: source.y};
            return diagonal({source: o, target: o});
          })
          .remove();

      // Stash the old positions for transition.
      nodes.forEach(function(d) {
        d.x0 = d.x;
        d.y0 = d.y;
      });
    }

    // Toggle children on click.
    function click(d) {
      if (d.children) {
        d._children = d.children;
        d.children = null;
      } else {
        d.children = d._children;
        d._children = null;
      }
      update(d);
    }

    </script>
    </div>
    </div>
  </div>
</div>